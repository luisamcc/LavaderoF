{"ast":null,"code":"var _jsxFileName = \"C:\\\\Lavadero API\\\\lavadero\\\\src\\\\Components\\\\Registrarse\\\\Registrarse.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { userSignUp } from \"../../api/userApi\";\nimport InputRegister from \"./InputRegister\";\nimport { Toast } from \"primereact/toast\";\nimport { showToast } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Registrarse = () => {\n  _s();\n  //constante toast\n  const toast = useRef(null);\n\n  //Un usesState con las propiedades de los name de los input\n  const [inputs, setInputs] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    firstname,\n    lastname,\n    email,\n    password\n  } = inputs;\n\n  // funcion manejadora de los inputs de los inputs\n  const handleInputsForm = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n    console.log(inputs);\n  };\n  // Inicio del manejo del handleDateRegister (Formulario de Registro)\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n\n    //envio de datos hacia el server \n    if (!firstname || !lastname || !email || !password) {\n      alert('Todos los campos son requeridos');\n    } else {\n      const result = await userSignUp(inputs);\n      if (result.status) {\n        showToast('success', 'Success', result.message, toast);\n        // Limpiando el formulario\n        setInputs({\n          firstname: '',\n          lastname: \"\",\n          email: \"\",\n          password: \"\"\n        });\n        setTimeout(() => {\n          window.location.href = '/';\n        }, 3500);\n      } else {\n        showToast('warn', 'Warn', result.message, toast);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registrate en EGDA Solutions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputRegister, {\n          title: \"first Name\",\n          type: \"text\",\n          name: \"firstname\",\n          value: inputs.firstname,\n          handle: handleInputsForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRegister, {\n          title: \"last Name\",\n          type: \"text\",\n          name: \"lastname\",\n          value: inputs.lastname,\n          handle: handleInputsForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRegister, {\n          title: \"Email\",\n          type: \"email\",\n          name: \"email\",\n          value: inputs.email,\n          handle: handleInputsForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRegister, {\n          title: \"password\",\n          type: \"password\",\n          name: \"password\",\n          value: inputs.password,\n          handle: handleInputsForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Registrarse, \"arJnzU+tEI6YO0rFPlMWphp3EgM=\");\n_c = Registrarse;\nexport default Registrarse;\nvar _c;\n$RefreshReg$(_c, \"Registrarse\");","map":{"version":3,"names":["React","useRef","useState","userSignUp","InputRegister","Toast","showToast","Registrarse","toast","inputs","setInputs","firstname","lastname","email","password","handleInputsForm","e","target","name","value","console","log","handleOnSubmit","preventDefault","alert","result","status","message","setTimeout","window","location","href"],"sources":["C:/Lavadero API/lavadero/src/Components/Registrarse/Registrarse.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { userSignUp } from \"../../api/userApi\";\r\nimport InputRegister from \"./InputRegister\";\r\nimport {Toast} from \"primereact/toast\"\r\nimport { showToast } from \"../../utils\";\r\n\r\nconst Registrarse = () => {\r\n  //constante toast\r\n  const toast = useRef(null);\r\n\r\n  //Un usesState con las propiedades de los name de los input\r\n  const[ inputs, setInputs ] = useState({\r\n    firstname: \"\",\r\n    lastname:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n  } );\r\n\r\nconst {firstname, lastname, email, password} = inputs\r\n\r\n// funcion manejadora de los inputs de los inputs\r\nconst handleInputsForm = (e) => {\r\n  setInputs({...inputs, [e.target.name]: e.target.value});\r\n  console.log(inputs);\r\n}\r\n  // Inicio del manejo del handleDateRegister (Formulario de Registro)\r\n  const handleOnSubmit = async ( e ) => {\r\n    e.preventDefault();\r\n  \r\n    //envio de datos hacia el server \r\n    if (!firstname || !lastname || !email || !password) {\r\n      alert('Todos los campos son requeridos')\r\n    }else{\r\n    const result = await userSignUp(inputs)\r\n    if(result.status){\r\n      showToast('success', 'Success', result.message, toast)\r\n      // Limpiando el formulario\r\n      setInputs({\r\n        firstname:'',\r\n        lastname:\"\",\r\n        email:\"\",\r\n        password:\"\"\r\n      })\r\n      setTimeout(() => {\r\n        window.location.href = '/'        \r\n      }, 3500);\r\n    }else{\r\n      showToast('warn', 'Warn', result.message, toast)\r\n    }\r\n    }\r\n\r\n      \r\n  };\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <div className=\"card card-register\">\r\n        <h2>Registrate en EGDA Solutions</h2>\r\n\r\n        {/* Inicio del formulario de Registro */}\r\n        <form action=\"\" onSubmit={ handleOnSubmit}>\r\n          <InputRegister title='first Name' type= 'text' name= 'firstname' value={inputs.firstname} handle= {handleInputsForm}/>\r\n          <InputRegister title='last Name' type= 'text' name= 'lastname' value={inputs.lastname} handle= {handleInputsForm}/>\r\n          <InputRegister title='Email' type='email' name='email' value={inputs.email} handle= {handleInputsForm}/>\r\n          <InputRegister title='password' type='password' name='password' value={inputs.password} handle= {handleInputsForm}/>              \r\n          <button type='submit' className=\"btn btn-primary\" >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registrarse;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}